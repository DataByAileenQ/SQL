#This project utilizes the following Superstore data: 

CREATE TABLE superstore (
    item_id INTEGER PRIMARY KEY,
    item_name TEXT,
    category TEXT,
    price DECIMAL(10, 2),
    stock_quantity INTEGER,
    average_rating DECIMAL(3, 2)
);

INSERT INTO superstore (item_id, item_name, category, price, stock_quantity, average_rating)
VALUES
    (1, 'Stainless Steel Cookware Set', 'Kitchen Supplies', 89.99, 50, 4.6),
    (2, 'Memory Foam Mattress', 'Furnishings', 499.99, 30, 4.8),
    (3, 'Smart LED TV', 'Electronics', 549.00, 20, 4.5),
    (4, 'Robot Vacuum Cleaner', 'Appliances', 199.50, 40, 4.3),
    (5, 'Wireless Bluetooth Speaker', 'Electronics', 39.99, 60, 4.2),
    (6, 'Non-Stick Baking Set', 'Kitchen Supplies', 29.95, 80, 4.4),
    (7, 'Cotton Bedding Set', 'Furnishings', 89.00, 25, 4.7),
    (8, 'Smart Home Security Camera', 'Electronics', 79.95, 15, 4.1),
    (9, 'Air Purifier', 'Appliances', 129.50, 35, 4.6),
    (10, 'Premium Coffee Maker', 'Kitchen Supplies', 79.99, 50, 4.9),
    (11, 'Ergonomic Office Chair', 'Furnishings', 189.00, 20, 4.5),
    (12, 'Wireless Earbuds', 'Electronics', 49.99, 75, 4.3),
    (13, 'Slow Cooker', 'Appliances', 49.95, 30, 4.7),
    (14, 'Cutlery Set', 'Kitchen Supplies', 34.50, 40, 4.4),
    (15, 'Cozy Throw Blanket', 'Furnishings', 24.99, 100, 4.2);

#For this project, I used SQL to query the Superstore database to get information about items sold at the store and their prices. 

#The following query analyzes product categories by showing the average rating within each category. The results are displayed in descending order to highlight the highest-rated categories first.
SELECT category, AVG(average_rating) AS avg_rating
FROM superstore
GROUP BY category
ORDER BY avg_rating DESC;

#This query evaluates product categories where the price of items exceeds $100. It calculates the average price for each category and the total stock quantity, organizing the results by stock quantity in ascending order.
SELECT category, AVG(price) AS avg_price, SUM(stock_quantity) AS total_stock
FROM superstore
WHERE price > 100
GROUP BY category
ORDER BY total_stock ASC;

#This query calculates the average price of items in the "Kitchen Supplies" category and rounds the result to two decimal places to provide a more precise value.
SELECT category, ROUND(AVG(price), 2) AS average_price
FROM superstore
WHERE category = 'Kitchen Supplies';

#This query calculates the total price for each item that has a stock quantity of at least 20. The results are organized from the most to the least expensive, showcasing items with higher cumulative value.
SELECT item_name, SUM(price) AS total_price
FROM superstore
WHERE stock_quantity >= 20
GROUP BY item_name
ORDER BY total_price DESC;
